// Code generated by gromer. DO NOT EDIT.
package main

import (
	"github.com/gorilla/mux"
	"github.com/pyros2097/gromer"
	"github.com/pyros2097/gromer/assets"
	"github.com/pyros2097/gromer/gsx"
	"github.com/rs/zerolog/log"
	"gocloud.dev/server"

	"github.com/pyros2097/gromer/_example/assets"
	"github.com/pyros2097/gromer/_example/components"
	"github.com/pyros2097/gromer/_example/containers"
	"github.com/pyros2097/gromer/_example/routes"
	"github.com/pyros2097/gromer/_example/routes/about"
	
)

func init() {
	gsx.RegisterComponent(components.Todo, components.TodoStyles, "todo")
	gsx.RegisterComponent(components.Checkbox, nil, "value")
	gsx.RegisterComponent(containers.TodoCount, nil, "filter")
	gsx.RegisterComponent(containers.TodoList, containers.TodoListStyles, "page", "filter")
}

func main() {
	baseRouter := mux.NewRouter()
	baseRouter.Use(gromer.LogMiddleware)
	// baseRouter.NotFoundHandler = gromer.StatusHandler(404, not_found_404.GET, not_found_404.Meta, not_found_404.Styles)
	
	staticRouter := baseRouter.NewRoute().Subrouter()
	staticRouter.Use(gromer.CacheMiddleware)
	staticRouter.Use(gromer.CompressMiddleware)
	gromer.StaticRoute(staticRouter, "/gromer/", gromer_assets.FS)
	gromer.StaticRoute(staticRouter, "/assets/", assets.FS)
	gromer.IconsRoute(staticRouter, "/icons/", assets.FS)
	gromer.PageStylesRoute(staticRouter, "/styles.css")
	gromer.ComponentStylesRoute(staticRouter, "/components.css")

	pageRouter := baseRouter.NewRoute().Subrouter()
	gromer.Handle(pageRouter, "GET", "/", routes.GET, routes.Meta, routes.Styles)
	gromer.Handle(pageRouter, "POST", "/", routes.POST, routes.Meta, routes.Styles)
	gromer.Handle(pageRouter, "GET", "/about", about.GET, about.Meta, about.Styles)
	
	log.Info().Msg("http server listening on http://localhost:3000")
	srv := server.New(baseRouter, nil)
	if err := srv.ListenAndServe(":3000"); err != nil {
		log.Fatal().Stack().Err(err).Msg("failed to listen")
	}
}
