// Code generated by gromer. DO NOT EDIT.
package main

import (
	"github.com/gorilla/mux"
	"github.com/pyros2097/gromer"
	"github.com/rs/zerolog/log"
	"gocloud.dev/server"

	"github.com/pyros2097/gromer/_example/assets"
	"github.com/pyros2097/gromer/_example/components"
	"github.com/pyros2097/gromer/_example/containers"
	"github.com/pyros2097/gromer/_example/pages/404"
	"github.com/pyros2097/gromer/_example/pages"
	"github.com/pyros2097/gromer/_example/pages/about"
	"github.com/pyros2097/gromer/gsx"
	
)

func init() {
	gsx.RegisterComponent(components.Page)
	gsx.RegisterComponent(components.Todo)
	
	gsx.RegisterComponent(containers.TodoCount)
	gsx.RegisterComponent(containers.TodoList)
	gromer.RegisterAssets(assets.FS)
}

func main() {
	baseRouter := mux.NewRouter()
	baseRouter.Use(gromer.LogMiddleware)
	
	baseRouter.NotFoundHandler = gromer.StatusHandler(not_found_404.GET)
	
	staticRouter := baseRouter.NewRoute().Subrouter()
	staticRouter.Use(gromer.CacheMiddleware)
	gromer.GromerRoute(staticRouter, "/gromer/")
	gromer.StaticRoute(staticRouter, "/assets/")
	gromer.StylesRoute(staticRouter, "/styles.css")

	pageRouter := baseRouter.NewRoute().Subrouter()
	// gromer.ApiExplorerRoute(pageRouter, "/explorer")
	gromer.Handle(pageRouter, "GET", "/", pages.GET)
	gromer.Handle(pageRouter, "POST", "/", pages.POST)
	gromer.Handle(pageRouter, "GET", "/about", about.GET)
	

	apiRouter := baseRouter.NewRoute().Subrouter()
	apiRouter.Use(gromer.CorsMiddleware)
	
	
	
	log.Info().Msg("http server listening on http://localhost:3000")
	srv := server.New(baseRouter, nil)
	if err := srv.ListenAndServe(":3000"); err != nil {
		log.Fatal().Stack().Err(err).Msg("failed to listen")
	}
}
